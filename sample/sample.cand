@version       "1.0.0";
@min_sup       "0.1.0";
@author        "erdao";
@description   "this is an example CanfigDefine";
@log           "./canfig.log";
@doc           "./proto.md";
@help          "
        Welcome to use Sample CanfigDefine! \
        you need to specified slice to use  \
        1. if you are user, please use UserConfig SLICE \
        2. if you are developer, use DevConfig SLICE    \
";

(* STRUCT *)
STRUCT COMMAND {
    name            TEXT,
    description     TEXT       CHECK(LENGTH(description) > 10)
};

STRUCT TIME_S(max_minute:int = 1000) {
    minute          INT,
    second          INT,
    CONSTRAINT CHK_Time CHECK (second>=18 AND minute<max_minute)
};

STRUCT NAME         TEXT;

(* CONFIGS *)
CONFIG Server {
    run             BOOLEAN DEFAULT 1,
    name            NAME,
    port            INT,
    description     TEXT    DEFAULT 'default description',
    commands        LIST(COMMAND),
    alive_in        LIST(TIME_S(5)),
    alive_time      TIME_S
};

CONFIG Runner {
    runner_name     TEXT OPTIONAL,
    commands        LIST(COMMAND),
    nickname        LIST(TEXT),
    alive_time      TIME_S(500),
    protocol        TEXT CHECK( protocol IN ('tcp', 'udp', 'sctp', 'dccp') )
};

(* TRIGGER *)
TRIGGER ServerChangeAction WHEN CHANGE Server {
    # python interpreter integration
    if GET("Server.run") = 0:
        SET(Runner.flag, 0)

    if err_msg := ASSERT_REGEX(target=GET("Server.name"), pattern="server-[a|b|c]"):
        return CANFIG_ERR(msg=err_msg)

    if ASSERT_EQUAL(target=GET("Server.port"), dest=8000):
        return CANFIG_WARN(msg="the server port use port 8000")

    if err_msg := ASSERT_UNQIUE(list=GET("Server.commands"),
                                getter=lambda obj: obj['name']):
        return CANFIG_ERR(msg=err_msg)
};

(* SLICE *)
SLICE Default       = <>;
SLICE UserConfig    = (Runner - <Runner.commands>) + <Server.name, Server.port, Server.description>;
SLICE DevConfig     = ALL;